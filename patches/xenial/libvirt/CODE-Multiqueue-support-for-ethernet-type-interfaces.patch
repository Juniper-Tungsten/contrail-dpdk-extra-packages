diff -Nuar libvirt-2.5.0.orig/src/qemu/qemu_command.c libvirt-2.5.0/src/qemu/qemu_command.c
--- libvirt-2.5.0.orig/src/qemu/qemu_command.c	2017-08-02 21:13:59.792000000 -0700
+++ libvirt-2.5.0/src/qemu/qemu_command.c	2017-08-02 21:16:35.180000000 -0700
@@ -3699,7 +3699,8 @@
                     char **tapfd,
                     size_t tapfdSize,
                     char **vhostfd,
-                    size_t vhostfdSize)
+                    size_t vhostfdSize,
+                    bool use_queues)
 {
     bool is_tap = false;
     virBuffer buf = VIR_BUFFER_INITIALIZER;
@@ -3802,7 +3803,12 @@
     }
 
     if (is_tap) {
-        if (vhostfdSize) {
+        if (vhostfdSize && use_queues) {
+            virBufferAddLit(&buf, ",vhost=on");
+            if (vhostfdSize > 1) {
+                virBufferAsprintf(&buf, ",queues=%u", net->driver.virtio.queues);
+            }
+        } else if (vhostfdSize) {
             virBufferAddLit(&buf, "vhost=on,");
             if (vhostfdSize == 1) {
                 virBufferAsprintf(&buf, "vhostfd=%s,", vhostfd[0]);
@@ -7987,7 +7993,7 @@
 
     if (!(netdev = qemuBuildHostNetStr(net, driver,
                                        ',', -1,
-                                       NULL, 0, NULL, 0)))
+                                       NULL, 0, NULL, 0, 0)))
         goto error;
 
 
@@ -8046,6 +8052,7 @@
     virDomainNetType actualType = virDomainNetGetActualType(net);
     virNetDevBandwidthPtr actualBandwidth;
     size_t i;
+    unsigned int queues = 0;
 
 
     if (!bootindex)
@@ -8221,7 +8228,6 @@
 
     if ((actualType == VIR_DOMAIN_NET_TYPE_NETWORK ||
          actualType == VIR_DOMAIN_NET_TYPE_BRIDGE ||
-         actualType == VIR_DOMAIN_NET_TYPE_ETHERNET ||
          actualType == VIR_DOMAIN_NET_TYPE_DIRECT) &&
         !standalone) {
         /* Attempt to use vhost-net mode for these types of
@@ -8241,6 +8247,24 @@
             goto cleanup;
     }
 
+    if ((actualType == VIR_DOMAIN_NET_TYPE_ETHERNET) && !standalone) {
+        queues = net->driver.virtio.queues;
+        if (queues <= 1) {
+            queues = 0;
+            vhostfdSize = 1;
+
+            if (VIR_ALLOC_N(vhostfd, vhostfdSize) < 0 ||
+                VIR_ALLOC_N(vhostfdName, vhostfdSize))
+                goto cleanup;
+
+            memset(vhostfd, -1, vhostfdSize * sizeof(vhostfd[0]));
+
+            if (qemuInterfaceOpenVhostNet(def, net, qemuCaps,
+                                          vhostfd, &vhostfdSize) < 0)
+                goto cleanup;
+        }
+    }
+
     for (i = 0; i < tapfdSize; i++) {
         if (virSecurityManagerSetTapFDLabel(driver->securityManager,
                                             def, tapfd[i]) < 0)
@@ -8270,13 +8294,16 @@
         if (!(host = qemuBuildHostNetStr(net, driver,
                                          ',', vlan,
                                          tapfdName, tapfdSize,
-                                         vhostfdName, vhostfdSize)))
+                                         vhostfdName,
+                                         queues ? queues : vhostfdSize,
+                                         queues ? true : false)))
             goto cleanup;
         virCommandAddArgList(cmd, "-netdev", host, NULL);
     }
     if (qemuDomainSupportsNicdev(def, net)) {
         if (!(nic = qemuBuildNicDevStr(def, net, vlan, bootindex,
-                                       vhostfdSize, qemuCaps)))
+                                       queues ? queues : vhostfdSize,
+                                       qemuCaps)))
             goto cleanup;
         virCommandAddArgList(cmd, "-device", nic, NULL);
     } else {
@@ -8288,7 +8315,9 @@
         if (!(host = qemuBuildHostNetStr(net, driver,
                                          ',', vlan,
                                          tapfdName, tapfdSize,
-                                         vhostfdName, vhostfdSize)))
+                                         vhostfdName,
+                                         queues ? queues : vhostfdSize,
+                                         queues ? true : false)))
             goto cleanup;
         virCommandAddArgList(cmd, "-net", host, NULL);
     }
diff -Nuar libvirt-2.5.0.orig/src/qemu/qemu_command.h libvirt-2.5.0/src/qemu/qemu_command.h
--- libvirt-2.5.0.orig/src/qemu/qemu_command.h	2017-08-02 21:13:59.792000000 -0700
+++ libvirt-2.5.0/src/qemu/qemu_command.h	2017-08-02 21:16:22.744000000 -0700
@@ -88,7 +88,8 @@
                           char **tapfd,
                           size_t tapfdSize,
                           char **vhostfd,
-                          size_t vhostfdSize);
+                          size_t vhostfdSize,
+                          bool use_queues);
 
 /* Legacy, pre device support */
 char *qemuBuildNicStr(virDomainNetDefPtr net,
diff -Nuar libvirt-2.5.0.orig/src/qemu/qemu_hotplug.c libvirt-2.5.0/src/qemu/qemu_hotplug.c
--- libvirt-2.5.0.orig/src/qemu/qemu_hotplug.c	2017-08-02 21:13:59.792000000 -0700
+++ libvirt-2.5.0/src/qemu/qemu_hotplug.c	2017-08-02 21:16:22.744000000 -0700
@@ -963,6 +963,7 @@
     bool charDevPlugged = false;
     bool netdevPlugged = false;
     bool hostPlugged = false;
+    unsigned int queues = 0;
 
     /* preallocate new slot for device */
     if (VIR_REALLOC_N(vm->def->nets, vm->def->nnets + 1) < 0)
@@ -1049,23 +1050,25 @@
         break;
 
     case VIR_DOMAIN_NET_TYPE_ETHERNET:
-        tapfdSize = vhostfdSize = net->driver.virtio.queues;
-        if (!tapfdSize)
+        queues = net->driver.virtio.queues;
+        if (queues <= 1) {
+            queues = 0;
             tapfdSize = vhostfdSize = 1;
-        queueSize = tapfdSize;
-        if (VIR_ALLOC_N(tapfd, tapfdSize) < 0)
-            goto cleanup;
-        memset(tapfd, -1, sizeof(*tapfd) * tapfdSize);
-        if (VIR_ALLOC_N(vhostfd, vhostfdSize) < 0)
-            goto cleanup;
-        memset(vhostfd, -1, sizeof(*vhostfd) * vhostfdSize);
-        if (qemuInterfaceEthernetConnect(vm->def, driver, net,
-                                         tapfd, tapfdSize) < 0)
-            goto cleanup;
-        iface_connected = true;
-        if (qemuInterfaceOpenVhostNet(vm->def, net, priv->qemuCaps,
-                                      vhostfd, &vhostfdSize) < 0)
-            goto cleanup;
+            queueSize = tapfdSize;
+            if (VIR_ALLOC_N(tapfd, tapfdSize) < 0)
+                goto cleanup;
+            memset(tapfd, -1, sizeof(*tapfd) * tapfdSize);
+            if (VIR_ALLOC_N(vhostfd, vhostfdSize) < 0)
+                goto cleanup;
+            memset(vhostfd, -1, sizeof(*vhostfd) * vhostfdSize);
+            if (qemuInterfaceEthernetConnect(vm->def, driver, net,
+                                             tapfd, tapfdSize) < 0)
+                goto cleanup;
+            iface_connected = true;
+            if (qemuInterfaceOpenVhostNet(vm->def, net, priv->qemuCaps,
+                                          vhostfd, &vhostfdSize) < 0)
+                goto cleanup;
+        }
         break;
 
     case VIR_DOMAIN_NET_TYPE_HOSTDEV:
@@ -1180,13 +1183,17 @@
         if (!(netstr = qemuBuildHostNetStr(net, driver,
                                            ',', -1,
                                            tapfdName, tapfdSize,
-                                           vhostfdName, vhostfdSize)))
+                                           vhostfdName,
+                                           queues ? queues : vhostfdSize,
+                                           queues ? true : false)))
             goto cleanup;
     } else {
         if (!(netstr = qemuBuildHostNetStr(net, driver,
                                            ' ', vlan,
                                            tapfdName, tapfdSize,
-                                           vhostfdName, vhostfdSize)))
+                                           vhostfdName,
+                                           queues ? queues : vhostfdSize,
+                                           queues ? true : false)))
             goto cleanup;
     }
 
@@ -1230,7 +1237,8 @@
         VIR_FORCE_CLOSE(vhostfd[i]);
 
     if (!(nicstr = qemuBuildNicDevStr(vm->def, net, vlan, 0,
-                                      queueSize, priv->qemuCaps)))
+                                      queues ? queues : queueSize,
+                                      priv->qemuCaps)))
         goto try_remove;
 
     qemuDomainObjEnterMonitor(driver, vm);

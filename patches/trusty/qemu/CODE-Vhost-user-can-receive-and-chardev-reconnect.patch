diff --git a/net/vhost-user.c b/net/vhost-user.c
index b368a90..fc37b8f 100644
--- a/net/vhost-user.c
+++ b/net/vhost-user.c
@@ -198,6 +198,12 @@ static void net_vhost_user_event(void *opaque, int event)
     }
 }
 
+static int net_vhost_user_can_receive(void * opaque)
+{
+    /* TODO: add a real check */
+    return 1;
+}
+
 static int net_vhost_user_init(NetClientState *peer, const char *device,
                                const char *name, CharDriverState *chr,
                                int queues)
@@ -218,7 +224,8 @@ static int net_vhost_user_init(NetClientState *peer, const char *device,
         s->chr = chr;
     }
 
-    qemu_chr_add_handlers(chr, NULL, NULL, net_vhost_user_event, (void*)name);
+    qemu_chr_add_handlers(chr, net_vhost_user_can_receive, NULL,
+                          net_vhost_user_event, (void*)name);
 
     return 0;
 }
diff --git a/qemu-char.c b/qemu-char.c
index 2969c44..0f995f2 100644
--- a/qemu-char.c
+++ b/qemu-char.c
@@ -3571,7 +3571,7 @@ static void qemu_chr_parse_socket(QemuOpts *opts, ChardevBackend *backend,
     bool is_waitconnect = is_listen && qemu_opt_get_bool(opts, "wait", true);
     bool is_telnet      = qemu_opt_get_bool(opts, "telnet", false);
     bool do_nodelay     = !qemu_opt_get_bool(opts, "delay", true);
-    int64_t reconnect   = qemu_opt_get_number(opts, "reconnect", 0);
+    int64_t reconnect   = qemu_opt_get_number(opts, "reconnect", 5);
     const char *path = qemu_opt_get(opts, "path");
     const char *host = qemu_opt_get(opts, "host");
     const char *port = qemu_opt_get(opts, "port");
